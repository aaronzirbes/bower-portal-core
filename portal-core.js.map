{"version":3,"sources":["portal-core.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","global","baseCompareAscending","value","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","order","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","reverse","outer","iterIndex","data","type","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","values","hash","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","add","arrayConcat","othIndex","othLength","Array","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","slice","createPartialWrapper","createRound","methodName","Math","number","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","replace","rePropName","match","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","filter","findWhere","find","includes","isString","map","pluck","reject","sample","toArray","rand","shuffle","some","sortBy","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","id","now","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isFinite","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","trim","nativeParseInt","reHasHexPrefix","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","noConflict","_","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","augend","addend","sum","defaults","pick","contextProps","Date","Number","String","arrayProto","objectProto","stringProto","toString","WeakMap","ceil","floor","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","modArgs","partial","partialRight","rearg","assign","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","snakeCase","startCase","method","methodOf","round","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","concat","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","2","3","4","5","6","7","8","9","A","B","C","D","E","F","b","c","d","v","x","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","window","moduleExports","define","amd","angular","directive","service","./directives/autoFocusDirective","./directives/browserCheckDirective","./directives/dashboardLink","./filters/phoneNumberFilter","./filters/startCaseFilter","./services/fieldErrorService","./services/flashService","./services/gaService","./services/restDiscoveryService","./services/tokenService","restrict","link","post","scope","element","focus","$window","check","ua","navigator","userAgent","$1","browserSupported","phoneNumber","city","text","fieldErrors","read","flash","cleared","clearFlash","level","setFlash","getFlash",10,"$location","api","setAccount","gauser","env","host","ga","setCustomDimension","dimension",11,"$log","$http","$state","fieldErrorService","tokenService","urls","localhost","dockerhost","dev","qa","staging","fleethealth","paccarsolutions","default","entityMap","organizationTypes","oemroles","updateToken","token","headers","common","removeToken","refreshUserTokens","idLoading","inProgress","params","encodedToken","getEncodedToken","promise","then","response","updateTokens","idToken","validateToken","cb","idTokenExpired","refreshTokenExpired","go","cleanPath","url","snippet","encodeURI","doDelete","payload","deleteCallback","success","error","put","putCallback","isPublic","doNotValidate","postCallback","query","getEntityService","entity","delete","postUnvalidated","getEntity","postEntity","putEntity","deleteEntity",12,"localStorageService","$rootScope","setIdToken","newIdToken","isSupported","$broadcast","setEncodedToken","newEncodedToken","accessExp","refreshExp","getIdToken","hasEncodedToken","hasIdToken","clear"],"mappings":"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","file":"portal-core.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * lodash 3.10.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.0';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(require,module,exports){\n(function (global){\nvar angular = (typeof window !== \"undefined\" ? window['angular'] : typeof global !== \"undefined\" ? global['angular'] : null)\n\nangular.module('portal-core', ['LocalStorageModule'])\n    //directives\n    .directive('autoFocus', require('./directives/autoFocusDirective'))\n    .directive('browserCheck', require('./directives/browserCheckDirective'))\n    .directive('dashboardLink', require('./directives/dashboardLink'))\n\n    //filters\n    .filter('phoneNumber', require('./filters/phoneNumberFilter'))\n    .filter('startCase', require('./filters/startCaseFilter'))\n\n    //services\n    .service('fieldErrorService', require('./services/fieldErrorService'))\n    .service('flashService', require('./services/flashService'))\n    .service('gaService', require('./services/gaService'))\n    .service('restDiscovery', require('./services/restDiscoveryService'))\n    .service('tokenService', require('./services/tokenService'))\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./directives/autoFocusDirective\":3,\"./directives/browserCheckDirective\":4,\"./directives/dashboardLink\":5,\"./filters/phoneNumberFilter\":6,\"./filters/startCaseFilter\":7,\"./services/fieldErrorService\":8,\"./services/flashService\":9,\"./services/gaService\":10,\"./services/restDiscoveryService\":11,\"./services/tokenService\":12}],3:[function(require,module,exports){\nmodule.exports = function() {\n    return {\n        restrict: 'A',\n        link: {\n            post: function(scope, element) {\n                element[0].focus()\n            }\n        }\n    }\n}\n\n},{}],4:[function(require,module,exports){\nmodule.exports = ['$window', function($window) {\n    return {\n        restrict: 'E',\n        template: '<div ng-if=\"!browserSupported\" class=\"alert alert-warning\" role=\"alert\" > ' +\n                    '<i class=\"fa fa-warning\"></i> ' +\n                    'Please upgrade your browser to the latest version for the best viewing experience.' +\n                  '</div>',\n        link: function(scope) {\n            function check() {\n                var ua = $window.navigator.userAgent\n\n                //IE10-\n                if (/MSIE (\\d+\\.\\d+)/.test(ua)) {\n                    return false //only IE11+ is supported\n                }\n\n                //IE11+\n                if (/Trident.*rv[ :]*(\\d+\\.\\d+)/.test(ua)) {\n                    return (Number(RegExp.$1) >= 11)\n                }\n\n                //FireFox\n                if (/Firefox[\\/\\s](\\d+\\.\\d+)/.test(ua)) {\n                    return (Number(RegExp.$1) >= 33)\n                }\n\n                //Chrome\n                if (/Chrome[\\/\\s](\\d+\\.\\d+)/.test(ua)) {\n                    return (Number(RegExp.$1) >= 38)\n                }\n\n                //no match with supported browsers\n                return false\n            }\n\n            scope.browserSupported = check()\n        }\n    }\n}]\n\n},{}],5:[function(require,module,exports){\nmodule.exports = function() {\n  return {\n    restrict: 'E',\n    template: '<i class=\"fa fa-th-large fa-fw\"></i> <a href=\"#/\">Dashboard</a>'\n  }\n}\n\n},{}],6:[function(require,module,exports){\nvar _ = require('lodash')\n\n/**\n * If given a string, either returns a formatted phone number or its input\n * (if invalid). Otherwise returns an empty string.\n */\nmodule.exports = function() {\n    return function(phoneNumber) {\n        if (_.isString(phoneNumber)) {\n            var value = phoneNumber.replace(/[-\\.\\s()\\+]+/g, '')\n\n            if (!value.match(/^\\d{10}$/)) {\n                return phoneNumber\n            }\n\n            var city = value.slice(0, 3)\n            var number = value.slice(3)\n\n            number = number.slice(0, 3) + '-' + number.slice(3)\n            return '(' + city + ') ' + number\n        }\n\n        return ''\n    }\n}\n\n},{\"lodash\":1}],7:[function(require,module,exports){\nvar _ = require('lodash')\n\nmodule.exports = function() {\n    return function(text) {\n        return _.isString(text) ? _.startCase(text.toLowerCase()) : text\n    }\n}\n\n},{\"lodash\":1}],8:[function(require,module,exports){\nmodule.exports = function() {\n    return {\n        fieldErrors: {}\n    }\n}\n\n},{}],9:[function(require,module,exports){\nmodule.exports = function() {\n\n  var read = true\n\n  var flash = {\n    cleared: true\n  }\n\n  var clearFlash = function() {\n    flash.cleared = true\n    flash.message = undefined\n    flash.level = undefined\n    flash.link = undefined\n  }\n\n  return {\n    setFlash: function(message, level, link) {\n      read = false\n      if (!level) {\n        level = 'info'\n      }\n      flash.message = message\n      flash.level = level\n      flash.cleared = false\n      flash.link = link // link format: {text: \"Text\", callback: function() {}}\n    },\n\n    getFlash: function() {\n      if (read) {\n        clearFlash()\n      }\n      read = true\n      return flash\n    },\n\n    clearFlash: clearFlash\n  }\n\n}\n\n},{}],10:[function(require,module,exports){\nmodule.exports = ['$location', '$window', function($location, $window) {\n  var api = {}\n\n  api.setAccount = function() {\n    var gauser = 'UA-61358717-2'\n    _.each(['localhost', 'dev', 'qa', 'staging'], function(env) {\n      if ($location.host().indexOf(env) !== -1) {\n        gauser = 'UA-61358717-1'\n      }\n    })\n\n    if($window.ga) {\n      $window.ga('create', gauser, 'auto')\n    }\n  }\n\n  api.setCustomDimension = function(dimension, value) {\n    if($window.ga) {\n      $window.ga('set', dimension, value)\n    }\n  }\n\n  return api\n}]\n\n},{}],11:[function(require,module,exports){\nmodule.exports = ['$log', '$http', '$location', '$state', 'fieldErrorService', 'tokenService',\n    function($log, $http, $location, $state, fieldErrorService, tokenService) {\n        var urls = {\n            localhost: 'http://security-gateway-rp-dev.connectedfleet.io:8080',\n            dockerhost: 'http://dockerhost:8081',\n            dev: 'http://security-gateway-rp-dev.connectedfleet.io:8080',\n            qa: 'http://security-gateway-rp-qa.connectedfleet.io:8080',\n            staging: 'https://security-gateway-rp-staging.connectedfleet.io',\n            fleethealth: 'https://security-gateway-rp.fleethealth.io',\n            paccarsolutions: 'https://security-gateway-rp.fleethealth.io',\n            default: 'http://portal.connectedfleet.io'\n        }\n\n        // Map entities that do not follow the normal pattern\n        var entityMap = {\n            organizationTypes: 'organizationTypes/realms/OEM',\n            oemroles: 'roles/realms/OEM'\n        }\n\n        var updateToken = function(token) {\n            $http.defaults.headers.common['X-Auth-Token'] = token\n        }\n\n        var removeToken = function() {\n            $http.defaults.headers.common['X-Auth-Token'] = undefined\n        }\n\n        var refreshUserTokens = function() {\n            tokenService.idLoading.inProgress = true\n            var params = {\n                encodedToken: tokenService.getEncodedToken()\n            }\n            //TODO fix this circular dependency stuff\n            /*eslint no-use-before-define:0*/\n            tokenService.idLoading.promise = post('authentication', '/refreshToken', params, true).then(function(response) {\n                tokenService.updateTokens(response.data)\n                return response.data.idToken\n            })\n            return tokenService.idLoading.promise\n        }\n\n        var validateToken = function(cb) {\n            if (tokenService.idLoading.inProgress === true) {\n                return tokenService.idLoading.promise.then(cb)\n            }\n            if (tokenService.idTokenExpired()) {\n                if (tokenService.refreshTokenExpired()) {\n                    $state.go('login')\n                    return {\n                        then: function() {\n                        }\n                    }\n                } else {\n                    return refreshUserTokens().then(function() {\n                        updateToken(tokenService.getEncodedToken())\n                        return cb()\n                    })\n                }\n            } else {\n                updateToken(tokenService.getEncodedToken())\n                return cb()\n            }\n\n        }\n\n        var cleanPath = function(service, path) {\n            var host = $location.host()\n\n            var url = _.find(urls, function(snippet, key) {\n                return host.indexOf(key) !== -1\n            }) || urls.default\n\n            if (path.indexOf('/') !== 0) {\n                path = '/' + path\n            }\n\n            return encodeURI(url + path)\n        }\n\n        var doDelete = function(service, path, payload) {\n            var deleteCallback = function() {\n                return $http.delete(cleanPath(service, path), payload).success(function(response) {\n                    return response\n                }).error(function(data) {\n                    $log.error('Error during delete: ', data)\n                    fieldErrorService.fieldErrors = data.fieldErrors\n                })\n            }\n            return validateToken(deleteCallback)\n        }\n\n        var put = function(service, path, payload) {\n            var putCallback = function() {\n                return $http.put(cleanPath(service, path), payload).success(function(response) {\n                    return response\n                }).error(function(data) {\n                    $log.error('Error during put: ', data)\n                    fieldErrorService.fieldErrors = data.fieldErrors\n                })\n            }\n            return validateToken(putCallback)\n        }\n\n        var post = function(service, path, payload, isPublic, doNotValidate) {\n            var postCallback = function() {\n                var temp = cleanPath(service, path)\n                return $http.post(temp, payload).success(function(response) {\n                    return response\n                }).error(function(data) {\n                    $log.error('Error during post: ', data)\n                    fieldErrorService.fieldErrors = _.get(data, 'fieldErrors')\n                })\n            }\n            if (isPublic) {\n                removeToken()\n                return postCallback()\n            } else if (doNotValidate) {\n                updateToken(tokenService.getEncodedToken())\n                return postCallback()\n            } else {\n                return validateToken(postCallback)\n            }\n        }\n\n        var get = function(service, path, params, isPublic) {\n            var getCallback = function() {\n                var query = {\n                    params: params\n                }\n                return $http.get(cleanPath(service, path), query)\n            }\n\n            if (isPublic) {\n                removeToken()\n                return getCallback()\n            } else {\n                return validateToken(getCallback)\n            }\n        }\n\n        var getEntityService = function(entity) {\n            if (entityMap[entity]) {\n                return entity\n            }\n            return 'entity'\n        }\n\n        return {\n            cleanPath: cleanPath,\n\n            removeToken: removeToken,\n\n            refreshUserTokens: refreshUserTokens,\n\n            get: get,\n\n            post: post,\n\n            put: put,\n\n            delete: doDelete,\n\n            postUnvalidated: function(service, path, payload) {\n                return post(service, path, payload, false, true)\n            },\n\n            getEntity: function(path, params, entity) {\n                return get(getEntityService(entity), path, params)\n            },\n\n            postEntity: function(path, params, entity) {\n                return post(getEntityService(entity), path, params)\n            },\n\n            putEntity: function(path, params, entity) {\n                return put(getEntityService(entity), path, params)\n            },\n\n            deleteEntity: function(path, params, entity) {\n                return doDelete(getEntityService(entity), path, params)\n            },\n\n            // Exposed for testing\n            validateToken: validateToken\n        }\n    }]\n\n},{}],12:[function(require,module,exports){\nmodule.exports = ['localStorageService', '$rootScope',\n    function(localStorageService, $rootScope) {\n        var idLoading = {\n            inProgress: false\n        }\n\n        var idToken = localStorageService.get('pnet.portal.idToken')\n        var encodedToken = localStorageService.get('pnet.portal.encodedToken')\n\n        var setIdToken = function(newIdToken) {\n            idLoading.inProgress = false\n            idToken = newIdToken\n\n            if (localStorageService.isSupported) {\n                // do not save full id token if we are falling back to cookies - it is too long\n                localStorageService.set('pnet.portal.idToken', idToken)\n            }\n\n            $rootScope.$broadcast('pnet.token.id.updated')\n        }\n\n        var setEncodedToken = function(newEncodedToken) {\n            encodedToken = newEncodedToken\n            localStorageService.set('pnet.portal.encodedToken', encodedToken)\n        }\n\n        var idTokenExpired = function() {\n            if (!idToken || !idToken.accessExp) {\n                return true\n            }\n\n            return (new Date()).getTime() > idToken.accessExp\n        }\n\n        var refreshTokenExpired = function() {\n            if (!idToken || !idToken.refreshExp) {\n                return true\n            }\n\n            return (new Date()).getTime() > idToken.refreshExp\n        }\n\n        return {\n            setIdToken: setIdToken,\n            setEncodedToken: setEncodedToken,\n            idTokenExpired: idTokenExpired,\n            refreshTokenExpired: refreshTokenExpired,\n            idLoading: idLoading,\n\n            updateTokens: function(data) {\n                this.setIdToken(data.idToken)\n                this.setEncodedToken(data.encodedToken)\n            },\n\n            getIdToken: function() {\n                return idToken\n            },\n\n            getEncodedToken: function() {\n                return encodedToken\n            },\n\n            hasEncodedToken: function() {\n                return (!!encodedToken && encodedToken.length > 0)\n            },\n\n            hasIdToken: function() {\n                return !!idToken\n            },\n\n            clear: function() {\n                this.setIdToken(undefined)\n                this.setEncodedToken(undefined)\n                localStorageService.remove('pnet.portal.encodedToken')\n                localStorageService.remove('pnet.portal.idToken')\n            }\n        }\n    }]\n\n},{}]},{},[2]);\n"],"sourceRoot":"/source/"}